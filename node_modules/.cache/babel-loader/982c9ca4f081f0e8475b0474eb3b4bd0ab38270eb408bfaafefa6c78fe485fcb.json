{"ast":null,"code":"import { createStore } from \"vuex\";\nimport axios from \"axios\";\nconst store = createStore({\n  state: {\n    news: [],\n    //state内にnewsを空の配列として格納\n    error: null //state内にerrorをnull値として格納\n  },\n  mutations: {\n    setNews(state, news) {\n      state.news = news; //stateのnewsを「news」としたものをsetNewsとして定義\n    },\n    setError(state, error) {\n      state.error = error; //stateのerrorを「error」としたものをsetErrorとして定義\n    }\n  },\n  actions: {\n    async fetchNews({\n      commit\n    }) {\n      //以下をfetchNewsとする\n      try {\n        //成功した場合\n        const response = await axios.get('https://content.guardianapis.com/search?api-key=test'); //APIからのデータ取得を「response」とする\n        commit('setNews', response.data.response.results); //APIデータの結果を「setNews」とする\n        commit('setError', null); //null値を「setError」とする\n      } catch (error) {\n        //失敗した場合\n        commit('setError', 'Error fetching news'); //「Error fetching news」を「setError」とする\n        commit('setNews', []); //空の配列を「setNews」とする\n      }\n    }\n  }\n});\nexport default store;","map":{"version":3,"names":["createStore","axios","store","state","news","error","mutations","setNews","setError","actions","fetchNews","commit","response","get","data","results"],"sources":["/Users/yu/vue-news-app_/src/store/index.js"],"sourcesContent":["import { createStore } from \"vuex\";\nimport axios from \"axios\";\n\nconst store = createStore({\n    state: {\n        news: [], //state内にnewsを空の配列として格納\n        error: null //state内にerrorをnull値として格納\n    },\n    mutations: {\n        setNews(state, news) {\n            state.news = news; //stateのnewsを「news」としたものをsetNewsとして定義\n        },\n        setError(state, error) {\n            state.error = error; //stateのerrorを「error」としたものをsetErrorとして定義\n        }\n    },\n    actions: {\n        async fetchNews({ commit }) { //以下をfetchNewsとする\n            try { //成功した場合\n                const response = await axios.get('https://content.guardianapis.com/search?api-key=test'); //APIからのデータ取得を「response」とする\n                commit('setNews', response.data.response.results); //APIデータの結果を「setNews」とする\n                commit('setError', null); //null値を「setError」とする\n            } catch(error) { //失敗した場合\n                commit('setError', 'Error fetching news'); //「Error fetching news」を「setError」とする\n                commit('setNews', []); //空の配列を「setNews」とする\n            }\n        }\n\n    },\n\n\n});\n\nexport default store;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,KAAK,GAAGF,WAAW,CAAC;EACtBG,KAAK,EAAE;IACHC,IAAI,EAAE,EAAE;IAAE;IACVC,KAAK,EAAE,IAAI,CAAC;EAChB,CAAC;EACDC,SAAS,EAAE;IACPC,OAAOA,CAACJ,KAAK,EAAEC,IAAI,EAAE;MACjBD,KAAK,CAACC,IAAI,GAAGA,IAAI,CAAC,CAAC;IACvB,CAAC;IACDI,QAAQA,CAACL,KAAK,EAAEE,KAAK,EAAE;MACnBF,KAAK,CAACE,KAAK,GAAGA,KAAK,CAAC,CAAC;IACzB;EACJ,CAAC;EACDI,OAAO,EAAE;IACL,MAAMC,SAASA,CAAC;MAAEC;IAAO,CAAC,EAAE;MAAE;MAC1B,IAAI;QAAE;QACF,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,sDAAsD,CAAC,CAAC,CAAC;QAC1FF,MAAM,CAAC,SAAS,EAAEC,QAAQ,CAACE,IAAI,CAACF,QAAQ,CAACG,OAAO,CAAC,CAAC,CAAC;QACnDJ,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC;MAC9B,CAAC,CAAC,OAAMN,KAAK,EAAE;QAAE;QACbM,MAAM,CAAC,UAAU,EAAE,qBAAqB,CAAC,CAAC,CAAC;QAC3CA,MAAM,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,CAAC;MAC3B;IACJ;EAEJ;AAGJ,CAAC,CAAC;AAEF,eAAeT,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}